imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        app_version:      "%version%"
    form:
        resources: ['bootstrap_3_layout.html.twig']


swarrot:
    provider: pecl # pecl or amqp_lib
    default_connection: rabbitmq
    default_command: swarrot.command.base # Swarrot\SwarrotBundle\Command\SwarrotCommand
    connections:
        rabbitmq:
            host: "%rabbitmq_host%"
            port: "%rabbitmq_port%"
            login: "%rabbitmq_login%"
            password: "%rabbitmq_password%"
            vhost: 'vma'
    processors_stack:
        # signal_handler: 'Swarrot\Processor\SignalHandler\SignalHandlerProcessor'
        ack: 'Swarrot\Processor\Ack\AckProcessor'
        # max_messages: 'Swarrot\Processor\MaxMessages\MaxMessagesProcessor'
        # retry: 'Swarrot\Processor\Retry\RetryProcessor'
        exception_catcher: 'Swarrot\Processor\ExceptionCatcher\ExceptionCatcherProcessor'
        # max_execution_time: 'Swarrot\Processor\MaxExecutionTime\MaxExecutionTimeProcessor'
    consumers:
        channel_text_message:
            processor: consumers.text_message.channel
        user_text_message:
            processor: consumers.text_message.user
    messages_types:
        channel_text_message:
            exchange: text_message
            routing_key: channel
        user_text_message:
            exchange: text_message
            routing_key: user


# Nelmio API Doc Configuration
nelmio_api_doc:
    sandbox:
        enabled: false
        body_format:
            formats: [form, json]
            default_format: json
        request_format:
            formats:
                json: application/json
            method: accept_header

# REST Configuration
fos_rest:
    allowed_methods_listener: true
    body_listener:
        array_normalizer: fos_rest.normalizer.camel_keys
        # rules:
        #     -
        #         path: '^/api'
        #         priorities: ['application/json', '*/*']
        #         fallback_format: json
        #         prefer_extension: true
    param_fetcher_listener: true
    routing_loader:
        default_format: json
        include_format: false
    serializer:
        serialize_null: true
    view:
        serialize_null: true
        view_response_listener: force
        mime_types:
            json:
                - 'application/json'
                - 'application/vnd.api+json'
        formats:
            xml: false
            json: true
        templating_formats:
            html: false
